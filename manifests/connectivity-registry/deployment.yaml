---
apiVersion: v1
kind: Namespace
metadata:
  name: cross-cluster-connectivity
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: connectivity-registry
  namespace: cross-cluster-connectivity
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connectivity-registry
  namespace: cross-cluster-connectivity
  labels:
    app: connectivity-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: connectivity-registry
  template:
    metadata:
      labels:
        app: connectivity-registry
    spec:
      serviceAccountName: connectivity-registry
      containers:
      - name: connectivity-registry
        image: ghcr.io/vmware-tanzu/cross-cluster-connectivity/connectivity-registry:dev
        args:
        - --tls-cert=/certs/tls.crt
        - --tls-key=/certs/tls.key
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: connectivity-registry-certs
          mountPath: /certs
          readOnly: true
      volumes:
        - name: connectivity-registry-certs
          secret:
            secretName: connectivity-registry-certs
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: connectivity-registry
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: connectivity-registry
subjects:
  - kind: ServiceAccount
    name: connectivity-registry
    namespace: cross-cluster-connectivity
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: connectivity-registry
rules:
  - apiGroups:
      - "connectivity.tanzu.vmware.com"
    resources:
      - servicerecords
      - remoteregistries
    verbs:
      - list
      - watch
      - create
      - get
      - delete
      - update
---
apiVersion: v1
kind: Service
metadata:
  name: connectivity-registry
  namespace: cross-cluster-connectivity
  labels:
    app: connectivity-registry
spec:
  selector:
    app: connectivity-registry
  type: NodePort
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    nodePort: 30001
